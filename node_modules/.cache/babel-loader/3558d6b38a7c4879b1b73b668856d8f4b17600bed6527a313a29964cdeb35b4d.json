{"ast":null,"code":"var _jsxFileName = \"/home/jouleslabs/Desktop/QuestionPro/Interview-Task/src/Feature/Comment/Comment.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from '@tanstack/react-query';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchCommnets = async () => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n};\nexport default function CommentComponent() {\n  _s();\n  const {\n    data\n  } = useQuery({\n    queryKey: ['commnet'],\n    queryFn: fetchCommnets\n  });\n  console.log(\"Data---\", data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentComponent, \"wDefygpsWBVTl/fEL2emlq2/574=\", false, function () {\n  return [useQuery];\n});\n_c = CommentComponent;\nvar _c;\n$RefreshReg$(_c, \"CommentComponent\");","map":{"version":3,"names":["useQuery","React","jsxDEV","_jsxDEV","fetchCommnets","response","fetch","ok","Error","json","CommentComponent","_s","data","queryKey","queryFn","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jouleslabs/Desktop/QuestionPro/Interview-Task/src/Feature/Comment/Comment.tsx"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport React from 'react'\n\n\nconst fetchCommnets = async () => {\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  };\n\nexport default function CommentComponent() {\n    const {data} = useQuery({ queryKey: ['commnet'], queryFn: fetchCommnets })\n    console.log(\"Data---\", data)\n  return (\n    <div>\n      <h1>Comment</h1>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzB,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;EAC1E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAEH,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM;IAACC;EAAI,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,QAAQ,EAAE,CAAC,SAAS,CAAC;IAAEC,OAAO,EAAEV;EAAc,CAAC,CAAC;EAC1EW,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEJ,IAAI,CAAC;EAC9B,oBACET,OAAA;IAAAc,QAAA,eACEd,OAAA;MAAAc,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAACV,EAAA,CARuBD,gBAAgB;EAAA,QACrBV,QAAQ;AAAA;AAAAsB,EAAA,GADHZ,gBAAgB;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}