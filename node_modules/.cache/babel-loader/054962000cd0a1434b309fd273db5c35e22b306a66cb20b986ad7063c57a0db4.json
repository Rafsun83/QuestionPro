{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Practice Project\\\\React Custom modal\\\\react_ts_modal\\\\src\\\\component\\\\Dropdown\\\\Dropdown.tsx\",\n  _s = $RefreshSig$();\nimport clsx from 'clsx';\nimport { useRef, useState } from 'react';\nimport useClickOutside from '../../utils/common';\nimport DropdownItem from './DropdownItem';\n\n// import useClickOutside from 'utils/useClickOutside';\n// import JLDropdownItem from './JLDropdownItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dropdown = _ref => {\n  _s();\n  let {\n    isLast,\n    children,\n    className = 'w-full px-2 py-2'\n  } = _ref;\n  const classNames = clsx('dropDown right-3 ', className, `${'bg-white px-2 py-2'} ${isLast ? '-top-[3rem]' : ''}`);\n  const [open, setOpen] = useState(false);\n  const toggle = () => {\n    setOpen(prev => !prev);\n  };\n  const handleOutsideClose = () => {\n    setOpen(false);\n  };\n  const ref = useRef(null);\n  useClickOutside(ref, handleOutsideClose);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"menu\",\n    ref: ref,\n    className: \"relative inline-block text-left\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggle,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"2xl:ml-2 xl:ml-2 lg:ml-2 ml-0 -mr-1 h-5 w-5 text-violet-200 hover:text-violet-100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), open ? /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleOutsideClose,\n      className: classNames,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Dropdown, \"7fayJghE/5xHaq4DO0VIaMIU5oM=\", false, function () {\n  return [useClickOutside];\n});\n_c = Dropdown;\nDropdown.listItem = DropdownItem;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["clsx","useRef","useState","useClickOutside","DropdownItem","Dropdown","isLast","children","className","classNames","open","setOpen","toggle","prev","handleOutsideClose","ref","listItem"],"sources":["C:/Users/User/Desktop/Practice Project/React Custom modal/react_ts_modal/src/component/Dropdown/Dropdown.tsx"],"sourcesContent":["\r\nimport clsx from 'clsx';\r\nimport { PropsWithChildren, useRef, useState } from 'react';\r\nimport useClickOutside from '../../utils/common';\r\nimport DropdownItem from './DropdownItem';\r\n\r\n// import useClickOutside from 'utils/useClickOutside';\r\n// import JLDropdownItem from './JLDropdownItem';\r\ninterface ActionDropdownProps {\r\n  isLast?: boolean;\r\n  className: string;\r\n}\r\n\r\nconst Dropdown = ({\r\n  isLast,\r\n  children,\r\n  className = 'w-full px-2 py-2',\r\n}: PropsWithChildren<ActionDropdownProps>) => {\r\n  const classNames = clsx(\r\n    'dropDown right-3 ',\r\n    className,\r\n    `${'bg-white px-2 py-2'} ${isLast ? '-top-[3rem]' : ''}`\r\n  );\r\n  const [open, setOpen] = useState<boolean>(false);\r\n\r\n  const toggle = () => {\r\n    setOpen((prev) => !prev);\r\n  };\r\n  const handleOutsideClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const ref = useRef(null);\r\n  useClickOutside(ref, handleOutsideClose);\r\n\r\n  return (\r\n    <div id=\"menu\" ref={ref} className=\"relative inline-block text-left\">\r\n      <button onClick={toggle}>\r\n        <button className=\"2xl:ml-2 xl:ml-2 lg:ml-2 ml-0 -mr-1 h-5 w-5 text-violet-200 hover:text-violet-100\" />\r\n      </button>\r\n      {open ? (\r\n        <div onClick={handleOutsideClose} className={classNames}>\r\n          {children}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nDropdown.listItem = DropdownItem;\r\n\r\nexport default Dropdown;\r\n"],"mappings":";;AACA,OAAOA,IAAI,MAAM,MAAM;AACvB,SAA4BC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,OAAOC,eAAe,MAAM,oBAAoB;AAChD,OAAOC,YAAY,MAAM,gBAAgB;;AAEzC;AACA;AAAA;AAMA,MAAMC,QAAQ,GAAG,QAI6B;EAAA;EAAA,IAJ5B;IAChBC,MAAM;IACNC,QAAQ;IACRC,SAAS,GAAG;EAC0B,CAAC;EACvC,MAAMC,UAAU,GAAGT,IAAI,CACrB,mBAAmB,EACnBQ,SAAS,EACR,GAAE,oBAAqB,IAAGF,MAAM,GAAG,aAAa,GAAG,EAAG,EAAC,CACzD;EACD,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAU,KAAK,CAAC;EAEhD,MAAMU,MAAM,GAAG,MAAM;IACnBD,OAAO,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAC;EAC1B,CAAC;EACD,MAAMC,kBAAkB,GAAG,MAAM;IAC/BH,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC;EAED,MAAMI,GAAG,GAAGd,MAAM,CAAC,IAAI,CAAC;EACxBE,eAAe,CAACY,GAAG,EAAED,kBAAkB,CAAC;EAExC,oBACE;IAAK,EAAE,EAAC,MAAM;IAAC,GAAG,EAAEC,GAAI;IAAC,SAAS,EAAC,iCAAiC;IAAA,wBAClE;MAAQ,OAAO,EAAEH,MAAO;MAAA,uBACtB;QAAQ,SAAS,EAAC;MAAmF;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACjG,EACRF,IAAI,gBACH;MAAK,OAAO,EAAEI,kBAAmB;MAAC,SAAS,EAAEL,UAAW;MAAA,UACrDF;IAAQ;MAAA;MAAA;MAAA;IAAA,QACL,GACJ,IAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,GAlCIF,QAAQ;EAAA,QAoBZF,eAAe;AAAA;AAAA,KApBXE,QAAQ;AAoCdA,QAAQ,CAACW,QAAQ,GAAGZ,YAAY;AAEhC,eAAeC,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}