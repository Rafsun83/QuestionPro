{"ast":null,"code":"import{combineReducers,configureStore}from'@reduxjs/toolkit';import AllProducts from'./slices/ProductSlice';const rootReducer=combineReducers({product:AllProducts});export const store=configureStore({reducer:rootReducer});// Infer the `RootState` and `AppDispatch` types from the store itself\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}","map":{"version":3,"names":["combineReducers","configureStore","AllProducts","rootReducer","product","store","reducer"],"sources":["/home/jouleslabs/Downloads/Interview-task/Interview-Task/src/store/store.tsx"],"sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit'\nimport AllProducts from './slices/ProductSlice';\n\n\n\nconst rootReducer = combineReducers({\n  product: AllProducts,\n  });\n\n\nexport const store = configureStore({\n  reducer: rootReducer\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch"],"mappings":"AAAA,OAASA,eAAe,CAAEC,cAAc,KAAQ,kBAAkB,CAClE,MAAO,CAAAC,WAAW,KAAM,uBAAuB,CAI/C,KAAM,CAAAC,WAAW,CAAGH,eAAe,CAAC,CAClCI,OAAO,CAAEF,WACT,CAAC,CAAC,CAGJ,MAAO,MAAM,CAAAG,KAAK,CAAGJ,cAAc,CAAC,CAClCK,OAAO,CAAEH,WACX,CAAC,CAAC,CAEF;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}