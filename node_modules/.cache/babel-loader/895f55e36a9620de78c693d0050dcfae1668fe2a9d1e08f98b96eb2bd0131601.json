{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport UserReducer from './slices/UserSlice';\nconst rootReducer = combineReducers({\n  product: UserReducer\n});\nexport const store = configureStore({\n  reducer: rootReducer\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\n\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}","map":{"version":3,"names":["combineReducers","configureStore","UserReducer","rootReducer","product","store","reducer"],"sources":["/home/jouleslabs/Desktop/QuestionPro/Interview-Task/src/store/store.tsx"],"sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit'\nimport UserReducer from './slices/UserSlice';\n\n\n\nconst rootReducer = combineReducers({\n  product: UserReducer,\n  });\n\n\nexport const store = configureStore({\n  reducer: rootReducer\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,OAAOC,WAAW,MAAM,oBAAoB;AAI5C,MAAMC,WAAW,GAAGH,eAAe,CAAC;EAClCI,OAAO,EAAEF;AACT,CAAC,CAAC;AAGJ,OAAO,MAAMG,KAAK,GAAGJ,cAAc,CAAC;EAClCK,OAAO,EAAEH;AACX,CAAC,CAAC;;AAEF;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}