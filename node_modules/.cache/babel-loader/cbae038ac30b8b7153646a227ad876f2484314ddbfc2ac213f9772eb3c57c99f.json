{"ast":null,"code":"export const getStoreData = storeName => {\n  return new Promise(resolve => {\n    const request = indexedDB.open('myDB');\n    request.onsuccess = () => {\n      console.log('request.onsuccess - getAllData');\n      const db = request.result;\n      const tx = db.transaction(storeName, 'readonly');\n      const store = tx.objectStore(storeName);\n      const res = store.getAll();\n      res.onsuccess = () => {\n        resolve(res.result);\n      };\n    };\n  });\n};","map":{"version":3,"names":["getStoreData","storeName","Promise","resolve","request","indexedDB","open","onsuccess","console","log","db","result","tx","transaction","store","objectStore","res","getAll"],"sources":["/home/jouleslabs/Downloads/Interview-task/react_ts_modal/src/DB/Actions/retriveProducts.ts"],"sourcesContent":["import { Stores } from \"../db\";\n\nexport const getStoreData = <T>(storeName: Stores): Promise<T[]> => {\n    return new Promise((resolve) => {\n     const request = indexedDB.open('myDB');\n  \n      request.onsuccess = () => {\n        console.log('request.onsuccess - getAllData');\n        const db = request.result;\n        const tx = db.transaction(storeName, 'readonly');\n        const store = tx.objectStore(storeName);\n        const res = store.getAll();\n        res.onsuccess = () => {\n          resolve(res.result);\n        };\n      };\n    });\n  };"],"mappings":"AAEA,OAAO,MAAMA,YAAY,GAAOC,SAAiB,IAAmB;EAChE,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC/B,MAAMC,OAAO,GAAGC,SAAS,CAACC,IAAI,CAAC,MAAM,CAAC;IAErCF,OAAO,CAACG,SAAS,GAAG,MAAM;MACxBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7C,MAAMC,EAAE,GAAGN,OAAO,CAACO,MAAM;MACzB,MAAMC,EAAE,GAAGF,EAAE,CAACG,WAAW,CAACZ,SAAS,EAAE,UAAU,CAAC;MAChD,MAAMa,KAAK,GAAGF,EAAE,CAACG,WAAW,CAACd,SAAS,CAAC;MACvC,MAAMe,GAAG,GAAGF,KAAK,CAACG,MAAM,EAAE;MAC1BD,GAAG,CAACT,SAAS,GAAG,MAAM;QACpBJ,OAAO,CAACa,GAAG,CAACL,MAAM,CAAC;MACrB,CAAC;IACH,CAAC;EACH,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}