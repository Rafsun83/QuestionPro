{"ast":null,"code":"var _jsxFileName = \"/home/jouleslabs/Desktop/QuestionPro/Interview-Task/src/component/Post/UserPost.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Post from '../../Feature/Post/Post';\nimport { useQuery } from '@tanstack/react-query';\n// import config from '../../config/confix'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchPosts = async () => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n};\nexport default function UserPost() {\n  _s();\n  // Queries\n  const query = useQuery({\n    queryKey: ['posta'],\n    queryFn: fetchPosts\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(UserPost, \"c7fxJWDO4uMGjIdKMJSj1aiS9wg=\", false, function () {\n  return [useQuery];\n});\n_c = UserPost;\nvar _c;\n$RefreshReg$(_c, \"UserPost\");","map":{"version":3,"names":["React","Post","useQuery","jsxDEV","_jsxDEV","fetchPosts","response","fetch","ok","Error","json","UserPost","_s","query","queryKey","queryFn","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jouleslabs/Desktop/QuestionPro/Interview-Task/src/component/Post/UserPost.tsx"],"sourcesContent":["import React from 'react'\nimport Post from '../../Feature/Post/Post'\nimport { useQuery } from '@tanstack/react-query';\n// import config from '../../config/confix'\n\nconst fetchPosts = async () => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n};\n\nexport default function UserPost() {\n    // Queries\n    const query = useQuery({ queryKey: ['posta'], queryFn: fetchPosts })\n  \n  return (\n    <div>\n      <Post/>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,SAASC,QAAQ,QAAQ,uBAAuB;AAChD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;EAC1E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B;EACA,MAAMC,KAAK,GAAGX,QAAQ,CAAC;IAAEY,QAAQ,EAAE,CAAC,OAAO,CAAC;IAAEC,OAAO,EAAEV;EAAW,CAAC,CAAC;EAEtE,oBACED,OAAA;IAAAY,QAAA,eACEZ,OAAA,CAACH,IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACR,EAAA,CATuBD,QAAQ;EAAA,QAEdT,QAAQ;AAAA;AAAAmB,EAAA,GAFFV,QAAQ;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}