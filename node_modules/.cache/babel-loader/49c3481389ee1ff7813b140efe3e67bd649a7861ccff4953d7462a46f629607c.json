{"ast":null,"code":"var _jsxFileName = \"/home/jouleslabs/Desktop/QuestionPro/Interview-Task/src/CommonComponent/Button/Button.tsx\";\nimport clsx from \"clsx\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomButtons = ({\n  onClick,\n  className = \"bg-[#1f38f0] text-white px-3 py-2 rounded\",\n  variant = \"green\",\n  type = \"button\",\n  disabled,\n  isLoading = false,\n  children,\n  ...props\n}) => {\n  const classNames = clsx(\"buttonclass\", className, `btn  btn-${variant}`);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: type,\n    className: classNames,\n    disabled: disabled,\n    ...props,\n    children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"loading..\"\n    }, void 0, false) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomButtons;\nexport default CustomButtons;\nvar _c;\n$RefreshReg$(_c, \"CustomButtons\");","map":{"version":3,"names":["clsx","Fragment","_Fragment","jsxDEV","_jsxDEV","CustomButtons","onClick","className","variant","type","disabled","isLoading","children","props","classNames","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jouleslabs/Desktop/QuestionPro/Interview-Task/src/CommonComponent/Button/Button.tsx"],"sourcesContent":["import clsx from \"clsx\";\nimport { MouseEvent, PropsWithChildren, ReactElement } from \"react\";\ninterface ButtonProps {\n  style?: object;\n  size?: string;\n  variant?: string;\n  className?: string;\n  LeadingIcon?: ReactElement;\n  TrailingIcon?: ReactElement;\n  IconOnly?: ReactElement;\n  isLoading?: boolean;\n  disabled?: boolean;\n  type?: \"reset\" | \"button\" | \"submit\";\n  onClick?: (event: MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst CustomButtons = ({\n  onClick,\n  className = \"bg-[#1f38f0] text-white px-3 py-2 rounded\",\n  variant = \"green\",\n  type = \"button\",\n  disabled,\n  isLoading = false,\n  children,\n  ...props\n}: PropsWithChildren<ButtonProps>) => {\n  const classNames = clsx(\"buttonclass\", className, `btn  btn-${variant}`);\n  return (\n    <button type={type} className={classNames} disabled={disabled} {...props}>\n      {isLoading ? <>loading..</> : children}\n    </button>\n  );\n};\n\nexport default CustomButtons;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,MAAM;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAgBxB,MAAMC,aAAa,GAAGA,CAAC;EACrBC,OAAO;EACPC,SAAS,GAAG,2CAA2C;EACvDC,OAAO,GAAG,OAAO;EACjBC,IAAI,GAAG,QAAQ;EACfC,QAAQ;EACRC,SAAS,GAAG,KAAK;EACjBC,QAAQ;EACR,GAAGC;AAC2B,CAAC,KAAK;EACpC,MAAMC,UAAU,GAAGd,IAAI,CAAC,aAAa,EAAEO,SAAS,EAAE,YAAYC,OAAO,EAAE,CAAC;EACxE,oBACEJ,OAAA;IAAQK,IAAI,EAAEA,IAAK;IAACF,SAAS,EAAEO,UAAW;IAACJ,QAAQ,EAAEA,QAAS;IAAA,GAAKG,KAAK;IAAAD,QAAA,EACrED,SAAS,gBAAGP,OAAA,CAAAF,SAAA;MAAAU,QAAA,EAAE;IAAS,gBAAE,CAAC,GAAGA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEb,CAAC;AAACC,EAAA,GAhBId,aAAa;AAkBnB,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}