{"ast":null,"code":"var _jsxFileName = \"/home/jouleslabs/Desktop/QuestionPro/Interview-Task/src/component/Modal/index.tsx\",\n  _s = $RefreshSig$();\nimport clsx from 'clsx';\nimport { useRef } from 'react';\nimport ModalBody from './ModalBody';\nimport ModalCloseIcon from './ModalClose';\n\n// import ModalBody from './ModalBody';\n// import ModalCloseIcon from './ModalCloseIcon';\n// import ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  disableOutsideClick = false,\n  isOpen = false,\n  children,\n  animation = 'zoom',\n  className = 'w-full',\n  onClose\n}) => {\n  _s();\n  const classNames = clsx('modal', isOpen ? 'modal-visible' : 'modal-hidden');\n  const refModal = useRef(null);\n  const handleModalClick = event => {\n    if (!isOpen || disableOutsideClick) return;\n    if (refModal !== null && refModal !== void 0 && refModal.current.contains(event.target)) {\n      return;\n    }\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames,\n    onClick: handleModalClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: refModal,\n      className: `modal-content modal-animate-${animation} ${className}`,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Modal, \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\");\n_c = Modal;\nModal.Header = ModalHeader;\nModal.Body = ModalBody;\n// Modal.Footer = ModalFooter;\nModal.CloseIcon = ModalCloseIcon;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["clsx","useRef","ModalBody","ModalCloseIcon","ModalHeader","jsxDEV","_jsxDEV","Modal","disableOutsideClick","isOpen","children","animation","className","onClose","_s","classNames","refModal","handleModalClick","event","current","contains","target","onClick","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","Header","Body","CloseIcon","$RefreshReg$"],"sources":["/home/jouleslabs/Desktop/QuestionPro/Interview-Task/src/component/Modal/index.tsx"],"sourcesContent":["import clsx from 'clsx';\r\nimport { MouseEvent, MutableRefObject, PropsWithChildren, useRef } from 'react';\r\nimport ModalBody from './ModalBody';\r\nimport ModalCloseIcon from './ModalClose';\r\n\r\n// import ModalBody from './ModalBody';\r\n// import ModalCloseIcon from './ModalCloseIcon';\r\n// import ModalFooter from './ModalFooter';\r\nimport ModalHeader from './ModalHeader';\r\n\r\ninterface Props {\r\n  className?: string;\r\n  /**\r\n   * Defines if the modal is open\r\n   */\r\n  isOpen: boolean;\r\n  /**\r\n   * Defines the modal will not be hidden if turns true\r\n   */\r\n  disableOutsideClick?: boolean;\r\n  /**\r\n   * Defines the modal animation\r\n   */\r\n  animation?: 'fade' | 'zoom' | 'top' | 'bottom';\r\n  /**\r\n   * Function executed when the closed button is clicked\r\n   */\r\n  onClose?: () => void;\r\n}\r\n\r\nconst Modal = ({\r\n  disableOutsideClick = false,\r\n  isOpen = false,\r\n  children,\r\n  animation = 'zoom',\r\n  className = 'w-full',\r\n  onClose,\r\n}: PropsWithChildren<Props>) => {\r\n  const classNames = clsx('modal', isOpen ? 'modal-visible' : 'modal-hidden');\r\n\r\n  const refModal = useRef<HTMLDivElement | null>(\r\n    null\r\n  ) as MutableRefObject<HTMLDivElement>;\r\n\r\n  const handleModalClick = (event: MouseEvent<HTMLDivElement>) => {\r\n    if (!isOpen || disableOutsideClick) return;\r\n\r\n    if (refModal?.current.contains(event.target as Node)) {\r\n      return;\r\n    }\r\n\r\n    onClose?.();\r\n  };\r\n\r\n  return (\r\n    <div className={classNames} onClick={handleModalClick}>\r\n      <div\r\n        ref={refModal}\r\n        className={`modal-content modal-animate-${animation} ${className}`}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.Header = ModalHeader;\r\nModal.Body = ModalBody;\r\n// Modal.Footer = ModalFooter;\r\nModal.CloseIcon = ModalCloseIcon;\r\n\r\nexport default Modal;\r\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,SAA0DC,MAAM,QAAQ,OAAO;AAC/E,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,cAAc,MAAM,cAAc;;AAEzC;AACA;AACA;AACA,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAsBxC,MAAMC,KAAK,GAAGA,CAAC;EACbC,mBAAmB,GAAG,KAAK;EAC3BC,MAAM,GAAG,KAAK;EACdC,QAAQ;EACRC,SAAS,GAAG,MAAM;EAClBC,SAAS,GAAG,QAAQ;EACpBC;AACwB,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAMC,UAAU,GAAGf,IAAI,CAAC,OAAO,EAAES,MAAM,GAAG,eAAe,GAAG,cAAc,CAAC;EAE3E,MAAMO,QAAQ,GAAGf,MAAM,CACrB,IACF,CAAqC;EAErC,MAAMgB,gBAAgB,GAAIC,KAAiC,IAAK;IAC9D,IAAI,CAACT,MAAM,IAAID,mBAAmB,EAAE;IAEpC,IAAIQ,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEG,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAc,CAAC,EAAE;MACpD;IACF;IAEAR,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAG,CAAC;EACb,CAAC;EAED,oBACEP,OAAA;IAAKM,SAAS,EAAEG,UAAW;IAACO,OAAO,EAAEL,gBAAiB;IAAAP,QAAA,eACpDJ,OAAA;MACEiB,GAAG,EAAEP,QAAS;MACdJ,SAAS,EAAE,+BAA+BD,SAAS,IAAIC,SAAS,EAAG;MAAAF,QAAA,EAElEA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACb,EAAA,CAlCIP,KAAK;AAAAqB,EAAA,GAALrB,KAAK;AAoCXA,KAAK,CAACsB,MAAM,GAAGzB,WAAW;AAC1BG,KAAK,CAACuB,IAAI,GAAG5B,SAAS;AACtB;AACAK,KAAK,CAACwB,SAAS,GAAG5B,cAAc;AAEhC,eAAeI,KAAK;AAAC,IAAAqB,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}