{"ast":null,"code":"var _jsxFileName = \"/home/jouleslabs/Desktop/QuestionPro/Interview-Task/src/component/User/User.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUser } from \"../../store/slices/UserSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function User() {\n  _s();\n  const dispatch = useDispatch();\n  const userInfo = useSelector(state => state);\n  const [userInformation, setUserInformation] = useState({\n    name: \"\",\n    email: \"\"\n  });\n  const filed = [{\n    name: \"Name\",\n    type: \"text\",\n    value: userInformation.name\n  }, {\n    name: \"Email\",\n    type: \"text\",\n    value: userInformation.email\n  }];\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserInformation(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n    dispatch(updateUser({\n      name: userInformation.name,\n      email: userInformation.email\n    }));\n  };\n  useEffect(() => {\n    dispatch(updateUser({\n      name: userInformation.name,\n      email: userInformation.email\n    }));\n  }, [dispatch, userInformation.email, userInformation.name]);\n  useEffect(() => {\n    setUserInformation({\n      name: userInfo.user.name,\n      email: userInfo.user.email\n    });\n  }, [userInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-[30%]\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-3\",\n        children: filed.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: item.type,\n              className: \"border outline-none rounded  p-2\",\n              onChange: handleInputChange,\n              value: item.value // Map the name to the state\n              ,\n              name: item.name.toLowerCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(User, \"//HSX5UiTp0aVOx/wKyWd9R1RBk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","updateUser","jsxDEV","_jsxDEV","User","_s","dispatch","userInfo","state","userInformation","setUserInformation","name","email","filed","type","value","handleInputChange","e","target","prevState","user","className","children","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","onChange","toLowerCase","_c","$RefreshReg$"],"sources":["/home/jouleslabs/Desktop/QuestionPro/Interview-Task/src/component/User/User.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUser } from \"../../store/slices/UserSlice\";\n\ninterface UserInfoProps {\n  name: string;\n  email: string;\n  [key: string]: string;\n}\n\nexport default function User() {\n  const dispatch = useDispatch();\n\n  const userInfo: any = useSelector((state) => state);\n  const [userInformation, setUserInformation] = useState<UserInfoProps>({\n    name: \"\",\n    email: \"\",\n  });\n\n  const filed = [\n    {\n      name: \"Name\",\n      type: \"text\",\n      value: userInformation.name,\n    },\n    {\n      name: \"Email\",\n      type: \"text\",\n      value: userInformation.email,\n    },\n  ];\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setUserInformation((prevState) => ({\n      ...prevState,\n      [name]: value, \n    }));\n\n    dispatch(\n      updateUser({\n        name: userInformation.name,\n        email: userInformation.email,\n      })\n    );\n  };\n\n  useEffect(() => {\n    dispatch(\n        updateUser({\n          name: userInformation.name,\n          email: userInformation.email,\n        })\n      );\n  }, [dispatch, userInformation.email, userInformation.name])\n\n  useEffect(() => {\n    setUserInformation({\n      name: userInfo.user.name,\n      email: userInfo.user.email,\n    });\n  }, [userInfo]);\n\n  return (\n    <div className=\"w-[30%]\">\n      <form>\n        <div className=\"flex flex-col gap-3\">\n          {filed.map((item, index) => {\n            return (\n              <div className=\"flex flex-col gap-2\">\n                <p>{item.name}</p>\n                <input\n                  type={item.type}\n                  className=\"border outline-none rounded  p-2\"\n                  onChange={handleInputChange}\n                  value={item.value} // Map the name to the state\n                  name={item.name.toLowerCase()}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}