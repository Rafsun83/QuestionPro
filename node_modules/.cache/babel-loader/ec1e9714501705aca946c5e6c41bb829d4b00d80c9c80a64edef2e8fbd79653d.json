{"ast":null,"code":"var _jsxFileName = \"/home/jouleslabs/Desktop/QuestionPro/Interview-Task/src/Feature/MyComponent/MyComponent.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyComponent({\n  children\n}) {\n  // Wrap children in an array to use indexing, then map over each child.\n  const modifiedChildren = React.Children.map(children, (child, index) => {\n    console.log(\"child---\", child);\n    // Check if the child is a valid React element and of type 'button'.\n    if (/*#__PURE__*/React.isValidElement(child) && child.type === 'Button') {\n      // Only the first button remains enabled; others are disabled.\n      return /*#__PURE__*/React.cloneElement(child, {\n        disabled: index !== 0\n      });\n    }\n    return child; // Return non-button children as is.\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hey!! You have clicked me 6 time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-2\",\n      children: modifiedChildren\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MyComponent","children","modifiedChildren","Children","map","child","index","console","log","isValidElement","type","cloneElement","disabled","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/jouleslabs/Desktop/QuestionPro/Interview-Task/src/Feature/MyComponent/MyComponent.tsx"],"sourcesContent":["import React, { ReactElement } from 'react'\n\ntype MyComponentProps = {\n  children: React.ReactNode;\n};\n\nexport default function MyComponent({children}:MyComponentProps) {\n  // Wrap children in an array to use indexing, then map over each child.\n  const modifiedChildren = React.Children.map(children, (child, index) => {\n    console.log(\"child---\", child)\n    // Check if the child is a valid React element and of type 'button'.\n    if (React.isValidElement(child) && child.type === 'Button') {\n      // Only the first button remains enabled; others are disabled.\n      return React.cloneElement(child as ReactElement<any>, { disabled: index !== 0 });\n    }\n    return child; // Return non-button children as is.\n  });\n\n  return (\n    <div>\n      <p>Hey!! You have clicked me 6 time</p>\n      \n      <div className='flex items-center gap-2'>\n      {modifiedChildren}\n      </div>\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAwB,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAM3C,eAAe,SAASC,WAAWA,CAAC;EAACC;AAAyB,CAAC,EAAE;EAC/D;EACA,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,QAAQ,CAACC,GAAG,CAACH,QAAQ,EAAE,CAACI,KAAK,EAAEC,KAAK,KAAK;IACtEC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,KAAK,CAAC;IAC9B;IACA,IAAI,aAAAR,KAAK,CAACY,cAAc,CAACJ,KAAK,CAAC,IAAIA,KAAK,CAACK,IAAI,KAAK,QAAQ,EAAE;MAC1D;MACA,oBAAOb,KAAK,CAACc,YAAY,CAACN,KAAK,EAAuB;QAAEO,QAAQ,EAAEN,KAAK,KAAK;MAAE,CAAC,CAAC;IAClF;IACA,OAAOD,KAAK,CAAC,CAAC;EAChB,CAAC,CAAC;EAEF,oBACEN,OAAA;IAAAE,QAAA,gBACEF,OAAA;MAAAE,QAAA,EAAG;IAAgC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEvCjB,OAAA;MAAKkB,SAAS,EAAC,yBAAyB;MAAAhB,QAAA,EACvCC;IAAgB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACE,EAAA,GArBuBlB,WAAW;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}