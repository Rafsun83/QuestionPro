{"ast":null,"code":"var _jsxFileName = \"/home/jouleslabs/Desktop/QuestionPro/Interview-Task/src/Feature/Comment/Comment.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport Dropdown from \"../../CommonComponent/Button/SelectDropDown/SelectDropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchCommnets = async () => {\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/comments\");\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n};\nconst fetchPost = async () => {\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n};\nexport default function CommentComponent() {\n  _s();\n  const {\n    data\n  } = useQuery({\n    queryKey: [\"commnet\"],\n    queryFn: fetchCommnets\n  });\n  const [selectedOption, setSelectedOption] = useState(null);\n  const {\n    data: posts\n  } = useQuery({\n    queryKey: [\"pos\"],\n    queryFn: fetchPost\n  });\n  const options = posts === null || posts === void 0 ? void 0 : posts.map((item, index) => {\n    return {\n      label: item.title,\n      value: item.id\n    };\n  });\n  const handleSelect = option => {\n    setSelectedOption(option);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-5 w-[50%]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[300px]\",\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          options: options,\n          onSelect: handleSelect,\n          selectedOption: selectedOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col gap-2\",\n      children: data === null || data === void 0 ? void 0 : data.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border p-4 flex flex-col gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-[#1f38f0] font-bold\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentComponent, \"DDXR2KvyY+uDkmSFQBVdrH54uEQ=\", false, function () {\n  return [useQuery, useQuery];\n});\n_c = CommentComponent;\nvar _c;\n$RefreshReg$(_c, \"CommentComponent\");","map":{"version":3,"names":["useQuery","useState","Dropdown","jsxDEV","_jsxDEV","fetchCommnets","response","fetch","ok","Error","json","fetchPost","CommentComponent","_s","data","queryKey","queryFn","selectedOption","setSelectedOption","posts","options","map","item","index","label","title","value","id","handleSelect","option","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","name","body","_c","$RefreshReg$"],"sources":["/home/jouleslabs/Desktop/QuestionPro/Interview-Task/src/Feature/Comment/Comment.tsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport Dropdown from \"../../CommonComponent/Button/SelectDropDown/SelectDropdown\";\n\nconst fetchCommnets = async () => {\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/comments\");\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n};\n\nconst fetchPost = async () => {\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n  if (!response.ok) {\n    throw new Error(\"Network response was not ok\");\n  }\n  return response.json();\n};\n\nexport default function CommentComponent() {\n  const { data } = useQuery({ queryKey: [\"commnet\"], queryFn: fetchCommnets });\n\n  const [selectedOption, setSelectedOption] = useState(null);\n  const { data: posts } = useQuery({ queryKey: [\"pos\"], queryFn: fetchPost });\n\n  const options = posts?.map((item: any, index: number) => {\n    return {\n      label: item.title,\n      value: item.id,\n    };\n  });\n\n  const handleSelect = (option: any) => {\n    setSelectedOption(option);\n  };\n\n  return (\n    <div className=\"flex flex-col gap-5 w-[50%]\">\n      <div className=\"flex items-center justify-between\">\n        <p>Posts</p>\n\n        <div className=\"w-[300px]\">\n          <Dropdown\n            options={options}\n            onSelect={handleSelect}\n            selectedOption={selectedOption}\n          />\n        </div>\n      </div>\n      <div className=\"flex flex-col gap-2\">\n        {data?.map((item: any, index: number) => {\n          return (\n            <div key={index} className=\"border p-4 flex flex-col gap-3\">\n              <p className=\"text-[#1f38f0] font-bold\">{item.name}</p>\n              <p>{item.body}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}