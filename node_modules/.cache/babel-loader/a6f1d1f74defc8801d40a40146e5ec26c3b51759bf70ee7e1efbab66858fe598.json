{"ast":null,"code":"var _jsxFileName = \"/home/jouleslabs/Desktop/QuestionPro/Interview-Task/src/Feature/Comment/Comment.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from '@tanstack/react-query';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchCommnets = async () => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/comments');\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n};\nexport default function CommentComponent() {\n  _s();\n  const {\n    data\n  } = useQuery({\n    queryKey: ['commnet'],\n    queryFn: fetchCommnets\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-2 w-[40%]\",\n    children: data.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border p-4 flex flex-col gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-[#1f38f0] font-bold\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentComponent, \"wDefygpsWBVTl/fEL2emlq2/574=\", false, function () {\n  return [useQuery];\n});\n_c = CommentComponent;\nvar _c;\n$RefreshReg$(_c, \"CommentComponent\");","map":{"version":3,"names":["useQuery","React","jsxDEV","_jsxDEV","fetchCommnets","response","fetch","ok","Error","json","CommentComponent","_s","data","queryKey","queryFn","className","children","map","item","index","title","fileName","_jsxFileName","lineNumber","columnNumber","body","_c","$RefreshReg$"],"sources":["/home/jouleslabs/Desktop/QuestionPro/Interview-Task/src/Feature/Comment/Comment.tsx"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport React from 'react'\n\n\nconst fetchCommnets = async () => {\n    const response = await fetch('https://jsonplaceholder.typicode.com/comments');\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  };\n\nexport default function CommentComponent() {\n    const {data} = useQuery({ queryKey: ['commnet'], queryFn: fetchCommnets })\n\n  return (\n    <div className=\"flex flex-col gap-2 w-[40%]\">\n    {\n      data.map((item:any, index:number) => {\n          return (\n              <div className=\"border p-4 flex flex-col gap-3\">\n                  <p className=\"text-[#1f38f0] font-bold\">{item.title}</p>\n                  <p>{item.body}</p>\n              </div>\n          )\n      })\n    }\n  </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzB,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,CAAC;EAC7E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAEH,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM;IAACC;EAAI,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,QAAQ,EAAE,CAAC,SAAS,CAAC;IAAEC,OAAO,EAAEV;EAAc,CAAC,CAAC;EAE5E,oBACED,OAAA;IAAKY,SAAS,EAAC,6BAA6B;IAAAC,QAAA,EAE1CJ,IAAI,CAACK,GAAG,CAAC,CAACC,IAAQ,EAAEC,KAAY,KAAK;MACjC,oBACIhB,OAAA;QAAKY,SAAS,EAAC,gCAAgC;QAAAC,QAAA,gBAC3Cb,OAAA;UAAGY,SAAS,EAAC,0BAA0B;UAAAC,QAAA,EAAEE,IAAI,CAACE;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxDrB,OAAA;UAAAa,QAAA,EAAIE,IAAI,CAACO;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC;IAEd,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAER;AAACb,EAAA,CAjBuBD,gBAAgB;EAAA,QACrBV,QAAQ;AAAA;AAAA0B,EAAA,GADHhB,gBAAgB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}