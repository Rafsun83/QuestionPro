{"ast":null,"code":"var _jsxFileName = \"/home/jouleslabs/Downloads/Interview-task/Interview-Task/src/component/CommonComponent/Chart.tsx\",\n  _s = $RefreshSig$();\nimport { AgCharts } from 'ag-charts-react';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chart() {\n  _s();\n  // Chart Options: Control & configure the chart\n  const [chartOptions, setChartOptions] = useState({\n    // Data: Data to be displayed in the chart\n    data: [{\n      month: 'Jan',\n      avgTemp: 2.3,\n      iceCreamSales: 162000\n    }, {\n      month: 'Mar',\n      avgTemp: 6.3,\n      iceCreamSales: 302000\n    }, {\n      month: 'May',\n      avgTemp: 16.2,\n      iceCreamSales: 800000\n    }, {\n      month: 'Jul',\n      avgTemp: 22.8,\n      iceCreamSales: 1254000\n    }, {\n      month: 'Sep',\n      avgTemp: 14.5,\n      iceCreamSales: 950000\n    }, {\n      month: 'Nov',\n      avgTemp: 8.9,\n      iceCreamSales: 200000\n    }],\n    // Series: Defines which chart type and data to use\n    series: [{\n      type: 'bar',\n      xKey: 'month',\n      yKey: 'iceCreamSales'\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AgCharts, {\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Chart, \"GeJAUTuL6ddUKzUwc5BuCPaGDsk=\");\n_c = Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["AgCharts","React","useState","jsxDEV","_jsxDEV","Chart","_s","chartOptions","setChartOptions","data","month","avgTemp","iceCreamSales","series","type","xKey","yKey","children","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jouleslabs/Downloads/Interview-task/Interview-Task/src/component/CommonComponent/Chart.tsx"],"sourcesContent":["import { AgCharts } from 'ag-charts-react';\nimport React, { useState } from 'react'\n\nexport default function Chart() {\n    // Chart Options: Control & configure the chart\n    const [chartOptions, setChartOptions] = useState({\n        // Data: Data to be displayed in the chart\n        data: [\n            { month: 'Jan', avgTemp: 2.3, iceCreamSales: 162000 },\n            { month: 'Mar', avgTemp: 6.3, iceCreamSales: 302000 },\n            { month: 'May', avgTemp: 16.2, iceCreamSales: 800000 },\n            { month: 'Jul', avgTemp: 22.8, iceCreamSales: 1254000 },\n            { month: 'Sep', avgTemp: 14.5, iceCreamSales: 950000 },\n            { month: 'Nov', avgTemp: 8.9, iceCreamSales: 200000 },\n        ],\n        // Series: Defines which chart type and data to use\n        series: [{ type: 'bar', xKey: 'month', yKey: 'iceCreamSales' }],\n    });\n  return (\n    <div>\n      <AgCharts options={chartOptions} />\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC;IAC7C;IACAO,IAAI,EAAE,CACF;MAAEC,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE,GAAG;MAAEC,aAAa,EAAE;IAAO,CAAC,EACrD;MAAEF,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE,GAAG;MAAEC,aAAa,EAAE;IAAO,CAAC,EACrD;MAAEF,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE,IAAI;MAAEC,aAAa,EAAE;IAAO,CAAC,EACtD;MAAEF,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE,IAAI;MAAEC,aAAa,EAAE;IAAQ,CAAC,EACvD;MAAEF,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE,IAAI;MAAEC,aAAa,EAAE;IAAO,CAAC,EACtD;MAAEF,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE,GAAG;MAAEC,aAAa,EAAE;IAAO,CAAC,CACxD;IACD;IACAC,MAAM,EAAE,CAAC;MAAEC,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAgB,CAAC;EAClE,CAAC,CAAC;EACJ,oBACEZ,OAAA;IAAAa,QAAA,eACEb,OAAA,CAACJ,QAAQ;MAACkB,OAAO,EAAEX;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV;AAAChB,EAAA,CApBuBD,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}