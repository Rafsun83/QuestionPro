{"ast":null,"code":"let request;let db;let version=1;export let Stores=/*#__PURE__*/function(Stores){Stores[\"Products\"]=\"products\";return Stores;}({});export const initDB=()=>{return new Promise(resolve=>{// open the connection\nrequest=indexedDB.open('myDB');request.onupgradeneeded=()=>{db=request.result;// if the data object store doesn't exist, create it\nif(!db.objectStoreNames.contains(Stores.Products)){console.log('Creating users store');db.createObjectStore(Stores.Products,{keyPath:'id'});}// no need to resolve here\n};request.onsuccess=()=>{db=request.result;version=db.version;console.log('request.onsuccess - initDB',version);resolve(true);};request.onerror=()=>{resolve(false);};});};","map":{"version":3,"names":["request","db","version","Stores","initDB","Promise","resolve","indexedDB","open","onupgradeneeded","result","objectStoreNames","contains","Products","console","log","createObjectStore","keyPath","onsuccess","onerror"],"sources":["/home/jouleslabs/Downloads/Interview-task/react_ts_modal/src/DB/db.ts"],"sourcesContent":["let request: IDBOpenDBRequest;\nlet db: IDBDatabase;\nlet version = 1;\n\nexport interface Product {\n  id: string;\n  image: string;\n  name: string;\n  description: string;\n  price: string;\n}\n\nexport enum Stores {\n  Products = 'products',\n}\n\nexport const initDB = (): Promise<boolean> => {\n  return new Promise((resolve) => {\n    // open the connection\n    request = indexedDB.open('myDB');\n\n    request.onupgradeneeded = () => {\n      db = request.result;\n\n      // if the data object store doesn't exist, create it\n      if (!db.objectStoreNames.contains(Stores.Products)) {\n        console.log('Creating users store');\n        db.createObjectStore(Stores.Products, { keyPath: 'id' });\n      }\n      // no need to resolve here\n    };\n\n    request.onsuccess = () => {\n      db = request.result;\n      version = db.version;\n      console.log('request.onsuccess - initDB', version);\n      resolve(true);\n    };\n\n    request.onerror = () => {\n      resolve(false);\n    };\n  });\n};"],"mappings":"AAAA,GAAI,CAAAA,OAAyB,CAC7B,GAAI,CAAAC,EAAe,CACnB,GAAI,CAAAC,OAAO,CAAG,CAAC,CAUf,UAAY,CAAAC,MAAM,uBAANA,MAAM,EAANA,MAAM,8BAAN,CAAAA,MAAM,OAIlB,MAAO,MAAM,CAAAC,MAAM,CAAGA,CAAA,GAAwB,CAC5C,MAAO,IAAI,CAAAC,OAAO,CAAEC,OAAO,EAAK,CAC9B;AACAN,OAAO,CAAGO,SAAS,CAACC,IAAI,CAAC,MAAM,CAAC,CAEhCR,OAAO,CAACS,eAAe,CAAG,IAAM,CAC9BR,EAAE,CAAGD,OAAO,CAACU,MAAM,CAEnB;AACA,GAAI,CAACT,EAAE,CAACU,gBAAgB,CAACC,QAAQ,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAE,CAClDC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACnCd,EAAE,CAACe,iBAAiB,CAACb,MAAM,CAACU,QAAQ,CAAE,CAAEI,OAAO,CAAE,IAAK,CAAC,CAAC,CAC1D,CACA;AACF,CAAC,CAEDjB,OAAO,CAACkB,SAAS,CAAG,IAAM,CACxBjB,EAAE,CAAGD,OAAO,CAACU,MAAM,CACnBR,OAAO,CAAGD,EAAE,CAACC,OAAO,CACpBY,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEb,OAAO,CAAC,CAClDI,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAEDN,OAAO,CAACmB,OAAO,CAAG,IAAM,CACtBb,OAAO,CAAC,KAAK,CAAC,CAChB,CAAC,CACH,CAAC,CAAC,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}